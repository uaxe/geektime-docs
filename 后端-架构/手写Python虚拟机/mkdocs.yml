site_name: 手写Python虚拟机

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright © 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 手写Python虚拟机.md
  
   - 开篇词-从0开始，打造一个属于自己的Python引擎.md
  
   - 导学-三小时掌握C++（上）.md
  
   - 导学-三小时掌握C++（中）.md
  
   - 导学-三小时掌握C++（下）.md
  
   - 01-源起：动态编程语言如何引爆虚拟机的革命？.md
  
   - 02-编程语言全景图（上）：编译器是如何把源代码翻译成字节码的？.md
  
   - 03-编程语言全景图（下）：虚拟机是如何执行字节码的？.md
  
   - 04-字节码文件：编译器与虚拟机的标准合约.md
  
   - 05-分支语句：控制流让程序具备基本的运算能力.md
  
   - 06-循环语句：控制流让虚拟机执行复杂的运算.md
  
   - 07-类型标识：虚拟机支持对象自检的基础设施.md
  
   - 08-函数和栈帧：深入区分函数的静态描述和动态记录.md
  
   - 09-函数对象 ：函数是依赖什么成为第一类公民的？.md
  
   - 10-变量的作用域：哪些复杂规则是因函数而产生的？.md
  
   - 11-函数的参数：赋予函数意义的关键特性.md
  
   - 12-Native方法：打通底层软件与高层应用的关键.md
  
   - 13-列表（上）：Python语言的核心数据结构.md
  
   - 14-列表（下）：列表所支持的基本操作.md
  
   - 15-字典（上）：关联式数据结构的基本表示.md
  
   - 16-字典（下）：位置参数和闭包依赖字典实现.md
  
   - 17-函数闭包：函数式编程的重要支撑.md
  
   - 18-类型对象：虚拟机如何识别对象的类型？.md
  
   - 19-自定义类型：面向对象编程的基础设施.md
  
   - 20-创建对象：支持对象创建和访问属性以完成基本对象系统.md
  
   - 21-继承和多态：完善面向对象编程的两大特征.md
  
   - 22-自动内存管理：把程序员从内存缺陷的海洋里解放出来.md
  
   - 23-复制算法：最简单高效的垃圾回收算法.md
  
   - 24-标记和回收：完成对象的搬移以整理内存.md
  
   - 25-模块和库：构筑现代软件系统的基础材料.md
  
   - 26-动态扩展库：Python大流行的最根本保障.md
  
   - 27-异常（上）：优雅高效地处理运行时发生的错误.md
  
   - 28-异常（下）：处理 finally 子句和 traceback 对象.md
  
   - 29-Generator：一种无栈协程的简易实现.md
  
   - 结束语-结束，只是新的开始.md
  
   - 结课测试-一起挑战吧！.md
  