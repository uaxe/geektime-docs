site_name: Go进阶 · 分布式爬虫实战

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright © 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - Go进阶 · 分布式爬虫实战.md
  
   - 开篇词-聚沙成塔，构建高性能、分布式爬虫项目.md
  
   - 01-知识回顾：Go基础知识你真的掌握了吗？.md
  
   - 02-内有乾坤：Go语言六大基础知识体系.md
  
   - 03-进阶路线：如何深入学习Go语言？.md
  
   - 04-敏捷之道：大型Go项目的开发流程是怎样的？.md
  
   - 05-全局视野：洞悉项目开发流程与规范.md
  
   - 06-免费的宝库： 什么是网络爬虫？.md
  
   - 07-冰川之下：深入Go高并发网络模型.md
  
   - 08-高性能设计：自顶向下的高性能Go程序设计与优化.md
  
   - 09-破解性能谜题：性能优化的五层境界.md
  
   - 10-微服务设计：微服务架构与演进.md
  
   - 11-微服务挑战：微服务治理体系与实践.md
  
   - 12-分布式系统设计：数据一致性与故障容错的纠葛.md
  
   - 13-智慧之火：详解分布式容错共识算法.md
  
   - 14-谋定而动：爬虫项目需求分析与架构设计.md
  
   - 15-众人拾柴：高效团队的Go编码规范.md
  
   - 16-网络爬虫： 一次HTTP请求的魔幻旅途.md
  
   - 17-巨人的肩膀：HTTP协议与Go标准库原理.md
  
   - 18-依赖管理：Go Module 用法与原理.md
  
   - 19-从正则表达式到CSS选择器：4种网页文本处理手段.md
  
   - 20-面向组合：接口的使用场景与底层原理.md
  
   - 21-采集引擎：实战接口抽象与模拟浏览器访问.md
  
   - 22-优雅地离场： Context超时控制与原理.md
  
   - 23-偷梁换柱：为爬虫安上代理的翅膀.md
  
   - 24-日志处理：日志规范与最佳实践.md
  
   - 25 - 运筹帷幄： 协程的运行机制与调度器原理.md
  
   - 26-高并发爬虫：模型、控制与冲突检测.md
  
   - 27-掘地三尺：实战深度与广度优先搜索算法.md
  
   - 28-调度引擎：负载均衡与调度器实战.md
  
   - 29-细节决定成败：切片与哈希表的陷阱与原理.md
  
   - 30-辅助任务管理：任务优先级、去重与失败处理.md
  
   - 31-规则引擎：自定义爬虫处理规则.md
  
   - 32-存储引擎：数据清洗与存储.md
  
   - 33-固若金汤：限速器与错误处理.md
  
   - 34-服务注册与监听：Worker节点与etcd交互.md
  
   - 35-未雨绸缪：怎样通过静态与动态代码扫描保证代码质量？.md
  
   - 36-测试的艺术：依赖注入、表格测试与压力测试.md
  
   - 37-工具背后的工具：从代码覆盖率到模糊测试.md
  
   - 38-高级调试：怎样利用Delve调试复杂的程序问题？.md
  
   - 39-性能分析利器：深入pprof与trace工具.md
  
   - 40-资源调度：深入内存管理与垃圾回收.md
  
   - 41-线上综合案例：节约线上千台容器的性能分析实战.md
  
   - 42-他山之石：etcd架构之美.md
  
   - 43-分布式协调：etcd读写、MVCC原理与监听机制.md
  
   - 44-一个程序多种功能：构建子命令与flags.md
  
   - 45-Master高可用：怎样借助etcd实现服务选主？.md
  
   - 46-Master任务调度：服务发现与资源管理.md
  
   - 47-故障容错：如何在Worker崩溃时进行重新调度？.md
  
   - 48 - 完善核心能力：Master请求转发与Worker资源管理.md
  
   - 49 - 服务治理：如何进行限流、熔断与认证？.md
  
   - 50-不可阻挡的容器化：Docker核心技术与原理.md
  
   - 51 - 多容器部署：如何利用 Docker Compose快速搭建本地爬虫环境？.md
  
   - 52 - 容器海洋中的舵手：Kubernetes工作机制.md
  
   - 53-容器化实战：怎样搭建K8s爬虫集群？.md
  
   - 特别放送-Go泛型：用法、原理与最佳实践.md
  
   - 特别放送-回头看：如何更好地组织代码？.md
  
   - 结束语-登高望远，迈向新的高峰.md
  
   - 期末测试 - 来赴一场满分之约吧～.md
  