site_name: 遗留系统现代化实战

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright © 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - 遗留系统现代化实战.md
  
   - 开篇词-你现在所写的每一行代码，都是未来的遗留系统.md
  
   - 01-遗留系统之殇：为什么要对遗留系统进行现代化？.md
  
   - 02 - 遗留系统现代化：遗留系统的四化建设.md
  
   - 03-以降低认知负载为前提：为什么遗留系统这么难搞？.md
  
   - 04 - 如何降低认知负载：活的文档能救命.md
  
   - 05 - 以假设驱动为指引：如何评价遗留系统的现代化成果？.md
  
   - 06 - 以增量演进为手段：为什么历时一年的改造到头来是一场空？.md
  
   - 07 - 遗留系统现代化的五种策略：重构还是重写？这是一个问题.md
  
   - 08 - 代码现代化：你的代码可测吗？.md
  
   - 09 - 代码现代化：如何将一个300行的方法重构为3行？.md
  
   - 10 - 代码现代化 ：代码的分层重构.md
  
   - 11 - 架构现代化 ：在气泡上下文中打造你的新城区.md
  
   - 12 - 架构现代化 ：微服务，你准备好了吗？.md
  
   - 13 - 架构现代化 ：如何改造老城区前端？.md
  
   - 14 - 架构现代化 ：如何改造老城区后端？.md
  
   - 15 - 架构现代化：如何拆分数据？.md
  
   - 16-DevOps现代化： 从持续构建到持续集成.md
  
   - 17 - DevOps现代化：从持续集成到持续部署.md
  
   - 18 - 团队结构现代化 ：从组件团队到Spotify模型.md
  
   - 19 - 团队结构现代化： 团队拓扑学.md
  
   - 20-启动：如何开启一个遗留系统现代化项目？.md
  
   - 21-微服务拆分（一）：迈出遗留系统现代化第一步.md
  
   - 22-微服务拆分（二）：三招搞定数据库表解耦.md
  
   - 23-微服务拆分（三）：如何拆分存储过程？.md
  
   - 24-微服务拆分（四）：其他话题.md
  
   - 25-成果验证：如何评价遗留系统现代化项目的成败？.md
  
   - 大咖助阵-存储过程的拆分锦囊.md
  
   - 用户故事-只要方向对了，就不怕路远.md
  
   - 结束语-技术终将老去，但好在你还年轻.md
  
   - 期末测试-来赴一场100分之约！.md
  