site_name: DDD实战课

theme:
  name: material

  palette:
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-4
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-7
        name: Switch to light mode

  features:
    - navigation.footer
    - content.action.edit
    - navigation.sections
    - content.code.copy

  icon:
    edit: material/pencil
    logo: material/console-line

extra:
  homepage:
  version:
    provider: mike

copyright: Copyright © 2024-Present zkep
repo_url: https://github.com/zkep/mygeektime

markdown_extensions:
  - attr_list
  - md_in_html
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences

nav:
   - DDD实战课.md
  
   - 开篇词 - 学好了DDD，你能做什么？.md
  
   - 01 - 领域驱动设计：微服务设计为什么要选择DDD？.md
  
   - 02 - 领域、子域、核心域、通用域和支撑域：傻傻分不清？.md
  
   - 03 - 限界上下文：定义领域边界的利器.md
  
   - 04 - 实体和值对象：从领域模型的基础单元看系统设计.md
  
   - 05 - 聚合和聚合根：怎样设计聚合？.md
  
   - 06 - 领域事件：解耦微服务的关键.md
  
   - 07 - DDD分层架构：有效降低层与层之间的依赖.md
  
   - 08 - 微服务架构模型：几种常见模型的对比和分析.md
  
   - 09 - 中台：数字转型后到底应该共享什么？.md
  
   - 10 - DDD、中台和微服务：它们是如何协作的？.md
  
   - 答疑：有关3个典型问题的讲解.md
  
   - 11 - DDD实践：如何用DDD重构中台业务模型？.md
  
   - 12 - 领域建模：如何用事件风暴构建领域模型？.md
  
   - 13 - 代码模型（上）：如何使用DDD设计微服务代码模型？.md
  
   - 14 - 代码模型（下）：如何保证领域模型与代码模型的一致性？.md
  
   - 15 - 边界：微服务的各种边界在架构演进中的作用？.md
  
   - 16 - 视图：如何实现服务和数据在微服务各层的协作？.md
  
   - 17 - 从后端到前端：微服务后，前端如何设计？.md
  
   - 18 - 知识点串讲：基于DDD的微服务设计实例.md
  
   - 19 - 总结（一）：微服务设计和拆分要坚持哪些原则？.md
  
   - 20 - 总结（二）：分布式架构关键设计10问.md
  
   - 结束语 - 所谓高手，就是跨过坑和大海！.md
  
   - 基于DDD的微服务设计实例代码详解.md
  
   - 抽奖-《DDD实战课》沉淀成书了，感谢有你！.md
  
   - 期末测试 - 有关DDD的内容，你掌握了多少呢？.md
  